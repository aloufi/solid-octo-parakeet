version: '3.5'
services:
  eureka-server:
    build: ../eureka
    image: eureka-server
    container_name: eureka-server
    networks:
      - app_network
    ports:
    - "8761:8761"
    
  config-server:
    build: ../config-service
    image: config-server
    container_name: config-service
    networks:
      - app_network
    ports:
      - "8888:8888"
    environment:
      - REGISTRY_HOST=eureka-server 
      
  gateway-service:
    build: ../zuul
    image: gateway-service
    container_name: gateway-service
    networks:
      - app_network
    ports:
      - "8010:8010"
    environment:
      - REGISTRY_HOST=eureka-server
      - CONFIG_HOST=config-server

  vacation-service:
    build: ../vacation-service
    image: vacation-service
    container_name: vacation-service
    networks:
      - app_network
    ports:
      - "8020:8020"
    depends_on:
      - eureka-server
      - config-server
    restart:
      unless-stopped

  vacation-interface:
    build: ../vacationInterface
    image: vacation-interface
    container_name: vacation-interface
    networks:
      - app_network
    ports:
      - "4200:80"

  db-container:
    image: mysql
    container_name: db-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_USER: root
      MYSQL_USER: root
      MYSQL_DATABASE: employee
    networks:
      - app_network
    ports:
      - "3312:3306"

  rabbitmq-interface:
    image: rabbitmq:3-management
    container_name: rabbitmq-interface
    hostname: rabbitmq-interface
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "rabbitmq-vacation"
    read_only: false
    ports:
      - "15679:15672"
      - "5672:5672"
    networks:
      - app_network
    labels:
      NAME: "rabbitmq1"
    volumes:
      - rmqdata:/etc/rabbitmq

volumes:
  rmqdata:
    driver: local

networks:
  app_network:
    name: app_network

# docker build -t eureka-server .
# docker build -t config-server .
# docker build -t gateway-service .
